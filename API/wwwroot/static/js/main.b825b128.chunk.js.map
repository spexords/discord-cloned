{"version":3,"sources":["app/hooks/useOnClickOutside.js","app/stores/modalSlice.js","app/common/Modal.js","app/api/agent.js","app/stores/userSlice.js","app/stores/channelSlice.js","app/common/Spinner.js","app/common/Button.js","app/common/FormWrapper.js","app/common/Error.js","app/components/NewChannelForm.js","app/components/ChannelList.js","app/common/Separator.js","app/components/DefaultAvatar.js","app/components/EditAvatar.js","app/components/ChangeEmailForm.js","app/components/ChangePasswordForm.js","app/layouts/Settings.js","app/components/UserInfo.js","app/components/NewSubchannelForm.js","app/common/ConfirmForm.js","app/components/ChangeChannelPasswordForm.js","app/components/ChannelMenu.js","app/components/SubchannelList.js","app/components/UserMessage.js","app/components/Chat.js","app/components/MemberMenu.js","app/components/MemberInfo.js","app/components/MemberList.js","app/components/MessagePanel.js","app/components/Dashboard.js","app/stores/store.js","app/layouts/DiscordApp.js","app/components/LoginForm.js","app/components/RegisterForm.js","app/layouts/HomeScreen.js","app/layouts/App.js","app/common/globalStyle.js","index.js"],"names":["useOnClickOutside","ref","active","handler","ignoreRef","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","modalSlice","createSlice","name","initialState","opened","body","reducers","openModal","state","action","payload","closeModal","actions","selectModalState","modal","Conatiner","styled","div","props","Modal","dispatch","useDispatch","useRef","useSelector","Axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","responseBody","data","requests","url","get","then","post","put","delete","User","login","values","register","updateAccount","updatePassword","Channels","fetchAll","fetchDetails","id","fetchUsers","createChannel","deleteChannel","changePasswordChannel","createSubchannel","joinChannel","leaveChannel","kickUser","uid","Subchannels","sendMessage","createAsyncThunk","a","rejectWithValue","agent","user","errors","details","fetchCurrentUser","_","console","log","userSlice","loading","logout","removeItem","resetErrors","extraReducers","builder","addCase","pending","fulfilled","setItem","rejected","selectUserState","selectLoggedIn","fetchChannels","channels","fetchChannelDetails","selectedChannel","fetchChannelUsers","channelUsers","fetchSubchannelDetails","getState","invoke","newSubchannel","subchannelDetails","channel","channelEntity","subchannel","status","errorMsg","kickUserChannel","cid","channelSlice","selectedChannelUsers","selectedSubchannel","prevSelectedSubchannel","resetChannelSlice","resetChannelErrors","addMessage","messages","deleteMessage","filter","m","subchannels","c","uc","selectChannelState","rotate360","keyframes","Spinner","baseStyle","css","fluid","danger","transparent","StyledButton","button","SpinnerWrapper","Button","children","FormWrapper","selected","Message","h5","Error","CreateOptionWrapper","Option","h2","NewChannelForm","useState","currentOption","setCurrentOption","useForm","handleSubmit","watch","onClick","onSubmit","uuidv4","r","toast","dark","type","validate","value","confirmPassword","ChannelsWrapper","ChannelCircledButton","ChannelList","length","map","hasNotifications","src","alt","Wrapper","color","Separator","Container","big","background","DefaultAvatar","EditWrapper","EditAvatar","ChangeEmailForm","defaultValues","ChangePasswordForm","SectionHeader","h1","EditFieldWrapper","OptionWrapper","EditButton","CloseButton","img","AvatarNameWrapper","Settings","closeCallback","username","slice","email","UsernameContainer","IconsWrapper","MenuIcon","UserInfo","settingsOpened","setSettingsOpened","NewSubchannelForm","ButtonWrapper","ConfirmForm","header","content","confirmCallback","declineCallback","ChangeChannelPasswordForm","ChannelMenu","trigger","creatorId","Containter","ChannelNameWrapper","SubchannelsWrapper","SubheaderWrapper","SubchannelWrapper","ArrowButton","NewSubchannelButton","SubchannelList","menuOpened","setMenuOpened","sc","MessageWrapper","NameWrapper","DeleteButton","UserMessage","image","sender","date","hovered","setHovered","binClickedOnce","setBinClickedOnce","onMouseEnter","onMouseLeave","deleteMsgFromSubchannel","MessageList","MessageInput","input","Chat","setContent","messagesEndRef","scrollIntoView","behavior","msg","format","Date","placeholder","disabled","onChange","e","currentTarget","onKeyDown","key","message","sendMsgToSubchannel","MemberMenu","MemberInfo","isHost","MemberList","HeaderContainer","MainContainer","MessagePanel","Dashboard","connection","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","build","callbacks","withCallbacks","add","info","signalrMiddleware","signalMiddleware","shouldConnectionStartImmediately","createStore","combineReducers","userReducer","channelReducer","modalReducer","applyMiddleware","DiscordApp","HubConnectionState","Connected","start","catch","err","toString","stop","LoginForm","style","marginTop","history","push","RegisterForm","registerUser","HomeScreen","path","AppContainer","App","isLoggedIn","position","GlobalStyle","createGlobalStyle","createBrowserHistory","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.b825b128.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, active, handler, ignoreRef = null) => {\r\n  useEffect(() => {\r\n    const listener = (event) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (\r\n        !active ||\r\n        !ref.current ||\r\n        ref.current.contains(event.target) ||\r\n        (ignoreRef &&\r\n          (!ignoreRef.current || ignoreRef.current.contains(event.target)))\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n    document.addEventListener(\"touchstart\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n      document.removeEventListener(\"touchstart\", listener);\r\n    };\r\n  }, [ref, handler, active, ignoreRef]);\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const modalSlice = createSlice({\r\n  name: \"modal\",\r\n  initialState: {\r\n    opened: false,\r\n    body: null,\r\n  },\r\n  reducers: {\r\n    openModal: (state, action) => {\r\n      state.opened = true;\r\n      state.body = action.payload;\r\n    },\r\n    closeModal: (state) => {\r\n      state.opened = false;\r\n      state.body = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openModal, closeModal } = modalSlice.actions;\r\nexport const selectModalState = (state) => state.modal;\r\n\r\n\r\nexport default modalSlice.reducer;","import React, {  useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { useOnClickOutside } from \"../hooks/useOnClickOutside\";\r\nimport { closeModal, selectModalState } from \"../stores/modalSlice\";\r\n\r\nconst Conatiner = styled.div`\r\n  position: absolute;\r\n  display: grid;\r\n  place-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: black;\r\n  z-index: 15;\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n  visibility: ${(props) => (props.opened ? \"visible\" : \"hidden\")};\r\n`;\r\n\r\nconst Modal = () => {\r\n  const dispatch = useDispatch();\r\n  const ref = useRef();\r\n  const { opened, body } = useSelector(selectModalState);\r\n  useOnClickOutside(ref, opened, () => dispatch(closeModal()));\r\n  return (\r\n    <Conatiner opened={opened}>\r\n      <div ref={ref}>{body}</div>\r\n    </Conatiner>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import Axios from \"axios\";\r\n\r\nAxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nAxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nAxios.interceptors.response.use(undefined, (error) => {\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response) => {\r\n  return response.data;\r\n};\r\n\r\nconst requests = {\r\n  get: (url) => Axios.get(url).then(responseBody),\r\n  post: (url, body) => Axios.post(url, body).then(responseBody),\r\n  put: (url, body) => Axios.put(url, body).then(responseBody),\r\n  delete: (url) => Axios.delete(url).then(responseBody),\r\n};\r\n\r\nconst User = {\r\n  login: (values) => requests.post(\"/user/login\", values),\r\n  current: () => requests.get(\"/user\"),\r\n  register: (values) => requests.post(\"/user/register\", values),\r\n  updateAccount: (values) => requests.put(\"/user\", values),\r\n  updatePassword: (values) => requests.put(\"/user/password\", values)\r\n};\r\n\r\nconst Channels = {\r\n  fetchAll: () => requests.get(\"/channels\"),\r\n  fetchDetails: (id) => requests.get(`/channels/${id}`),\r\n  fetchUsers: (id) => requests.get(`/channels/${id}/users`),\r\n  createChannel: (values) => requests.post(\"/channels\", values),\r\n  deleteChannel: (id) => requests.delete(`/channels/${id}`),\r\n  changePasswordChannel: (id, values) => requests.put(`/channels/${id}/password`, values),\r\n  createSubchannel: (id, values) =>\r\n    requests.post(`/channels/${id}/subchannels`, values),\r\n  joinChannel: (values) => requests.post(\"/channels/join\", values),\r\n  leaveChannel: (id) => requests.post(`/channels/${id}/leave`, {}),\r\n  kickUser: (id, uid) => requests.delete(`/channels/${id}/users/${uid}`)\r\n};\r\n\r\nconst Messages = {\r\n  remove: (id) => requests.delete(`/messages/${id}`),\r\n};\r\n\r\nconst Subchannels = {\r\n  fetchDetails: (id) => requests.get(`/subchannels/${id}`),\r\n  sendMessage: (id, values) =>\r\n    requests.post(`/subchannels/${id}/messages`, values),\r\n};\r\n\r\nexport default {\r\n  User,\r\n  Channels,\r\n  Subchannels,\r\n  Messages,\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../api/agent\";\r\n\r\nexport const login = createAsyncThunk(\r\n  \"user/login\",\r\n  async (values, { rejectWithValue }) => {\r\n    try {\r\n      const user = await agent.User.login(values);\r\n      return user;\r\n    } catch (e) {\r\n      return rejectWithValue(e?.data?.errors?.details);\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  \"user/fetchCurrentUser\",\r\n  async (_ ,{ rejectWithValue }) => {\r\n    try {\r\n      const user = await agent.User.current();\r\n      return user;\r\n    } catch (e) {\r\n      return rejectWithValue(e?.data?.errors?.details);\r\n    }\r\n  }\r\n);\r\n\r\nexport const register = createAsyncThunk(\r\n    \"user/register\",\r\n    async (values ,{ rejectWithValue }) => {\r\n      try {\r\n        await agent.User.register(values);\r\n      } catch (e) {\r\n        console.log(e);\r\n        return rejectWithValue(e?.data?.errors?.details);\r\n      }\r\n    }\r\n  );\r\n  \r\n\r\nexport const updateAccount = createAsyncThunk(\r\n  \"user/updateAccount\",\r\n  async (values ,{ rejectWithValue }) => {\r\n    try {\r\n      await agent.User.updateAccount(values);\r\n      return values;\r\n    } catch (e) {\r\n      console.log(e);\r\n      return rejectWithValue(e?.data?.errors?.details);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updatePassword = createAsyncThunk(\r\n  \"user/updatePassword\",\r\n  async (values ,{ rejectWithValue }) => {\r\n    try {\r\n      await agent.User.updatePassword(values);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return rejectWithValue(e?.data?.errors?.details);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    logout: (state) => {\r\n      window.localStorage.removeItem(\"jwt\");\r\n      state.user = null;\r\n    },\r\n    resetErrors: (state) => {\r\n      state.error = null\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n        state.user = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.user = action.payload;\r\n        window.localStorage.setItem(\"jwt\", state.user?.token);\r\n        state.loading = false;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchCurrentUser.pending, (state, action) => {\r\n        state.user = null;\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchCurrentUser.fulfilled, (state, action) => {\r\n        state.user = action.payload;\r\n        window.localStorage.setItem(\"jwt\", state.user?.token);\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchCurrentUser.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(register.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(updateAccount.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateAccount.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = {...state.user, ...action.payload};\r\n      })\r\n      .addCase(updateAccount.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(updatePassword.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updatePassword.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(updatePassword.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout, resetErrors } = userSlice.actions;\r\n\r\nexport const selectUserState = (state) => state.user;\r\nexport const selectLoggedIn = (state) => state.user.user !== null;\r\n\r\nexport default userSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../api/agent\";\r\n\r\nexport const fetchChannels = createAsyncThunk(\r\n  \"channel/fetchChannels\",\r\n  async () => {\r\n    try {\r\n      const channels = await agent.Channels.fetchAll();\r\n      return channels;\r\n    } catch (e) {\r\n      console.log(e?.data.errors);\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchChannelDetails = createAsyncThunk(\r\n  \"channel/fetchChannelDetails\",\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const selectedChannel = await agent.Channels.fetchDetails(id);\r\n      return selectedChannel;\r\n    } catch (e) {\r\n      console.log(e?.data?.errors);\r\n      rejectWithValue(e?.data?.errors);\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchChannelUsers = createAsyncThunk(\r\n  \"channel/fetchChannelUsers\",\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const channelUsers = await agent.Channels.fetchUsers(id);\r\n      return channelUsers;\r\n    } catch (e) {\r\n      console.log(e?.data?.errors);\r\n      rejectWithValue(e?.data?.errors);\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchSubchannelDetails = (id) => async (\r\n  dispatch,\r\n  getState,\r\n  invoke\r\n) => {\r\n  try {\r\n    const newSubchannel = await agent.Subchannels.fetchDetails(id);\r\n    dispatch(subchannelDetails(newSubchannel));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const joinSubchannelGroup = () => async (dispatch, getState, invoke) => {\r\n  try {\r\n    const state = getState();\r\n    const { selectedSubchannel } = state.channel;\r\n    if (selectedSubchannel?.id) {\r\n      await invoke(\"AddToGroup\", selectedSubchannel?.id);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const leaveSubchannelGroup = () => async (\r\n  dispatch,\r\n  getState,\r\n  invoke\r\n) => {\r\n  try {\r\n    const state = getState();\r\n    const { prevSelectedSubchannel } = state.channel;\r\n    if (prevSelectedSubchannel?.id) {\r\n      await invoke(\"RemoveFromGroup\", prevSelectedSubchannel?.id);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const sendMsgToSubchannel = ({ id, content }) => async (\r\n  dispatch,\r\n  getState,\r\n  invoke\r\n) => {\r\n  try {\r\n    const message = {\r\n      content,\r\n    };\r\n   await invoke(\"SendMessage\", id, message);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const createChannel = createAsyncThunk(\r\n  \"channel/createChannel\",\r\n  async (channel, { rejectWithValue }) => {\r\n    try {\r\n      await agent.Channels.createChannel(channel);\r\n      return channel;\r\n    } catch (e) {\r\n      return rejectWithValue(e?.data?.errors?.details);\r\n    }\r\n  }\r\n);\r\n\r\nexport const joinChannel = createAsyncThunk(\r\n  \"channel/joinChannel\",\r\n  async (channel, { rejectWithValue }) => {\r\n    try {\r\n      const channelEntity = await agent.Channels.joinChannel(channel);\r\n      return channelEntity;\r\n    } catch (e) {\r\n      return rejectWithValue(e?.data?.errors?.details);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createSubchannel = createAsyncThunk(\r\n  \"channel/createSubchannel\",\r\n  async ({ id, subchannel }, { rejectWithValue }) => {\r\n    try {\r\n      await agent.Channels.createSubchannel(id, subchannel);\r\n      return subchannel;\r\n    } catch (e) {\r\n      console.log(e);\r\n      const { status } = e;\r\n      let errorMsg = \"\";\r\n      if (status === 403) {\r\n        errorMsg = \"You are not the channel's creator\";\r\n      } else {\r\n        errorMsg = e?.data?.errors?.details;\r\n      }\r\n      return rejectWithValue(errorMsg);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteMsgFromSubchannel = (id) => async (\r\n  dispatch,\r\n  getState,\r\n  invoke\r\n) => {\r\n  try {\r\n    const state = getState();\r\n    const { selectedSubchannel } = state.channel;\r\n    await invoke(\"RemoveMessage\", selectedSubchannel?.id, id);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const leaveChannel = createAsyncThunk(\r\n  \"channel/leaveChannel\",\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await agent.Channels.leaveChannel(id);\r\n      return id;\r\n    } catch (e) {\r\n      console.log(e);\r\n      const errorMsg = e?.data?.errors?.details;\r\n      return rejectWithValue(errorMsg);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteChannel = createAsyncThunk(\r\n  \"channel/deleteChannel\",\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await agent.Channels.deleteChannel(id);\r\n      return id;\r\n    } catch (e) {\r\n      console.log(e);\r\n      const errorMsg = e?.data?.errors?.details;\r\n      return rejectWithValue(errorMsg);\r\n    }\r\n  }\r\n);\r\n\r\nexport const changePasswordChannel = createAsyncThunk(\r\n  \"channel/changePasswordChannel\",\r\n  async ({ id, values }, { rejectWithValue }) => {\r\n    try {\r\n      await agent.Channels.changePasswordChannel(id, values);\r\n      return id;\r\n    } catch (e) {\r\n      console.log(e);\r\n      const errorMsg = e?.data?.errors?.details;\r\n      return rejectWithValue(errorMsg);\r\n    }\r\n  }\r\n);\r\n\r\nexport const kickUserChannel = createAsyncThunk(\r\n  \"channel/kickUserChannel\",\r\n  async ({ cid, uid }, { rejectWithValue }) => {\r\n    try {\r\n      await agent.Channels.kickUser(cid, uid);\r\n      return uid;\r\n    } catch (e) {\r\n      console.log(e);\r\n      const errorMsg = e?.data?.errors?.details;\r\n      return rejectWithValue(errorMsg);\r\n    }\r\n  }\r\n);\r\n\r\nexport const channelSlice = createSlice({\r\n  name: \"channel\",\r\n  initialState: {\r\n    channels: null,\r\n    selectedChannel: null,\r\n    selectedChannelUsers: null,\r\n    selectedSubchannel: null,\r\n    prevSelectedSubchannel: null,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    resetChannelSlice: (state) => {\r\n      state.channels = null;\r\n      state.selectedChannel = null;\r\n      state.selectedChannelUsers = null;\r\n      state.selectedSubchannel = null;\r\n      state.prevSelectedSubchannel = null;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    resetChannelErrors: (state) => {\r\n      state.error = null;\r\n    },\r\n    subchannelDetails: (state, action) => {\r\n      state.prevSelectedSubchannel = state.selectedSubchannel;\r\n      state.selectedSubchannel = action.payload;\r\n      state.error = null;\r\n      state.loading = false;\r\n    },\r\n    addMessage: (state, action) => {\r\n      if (state.selectedSubchannel) {\r\n        state.selectedSubchannel.messages = [\r\n          ...state.selectedSubchannel.messages,\r\n          action.payload,\r\n        ];\r\n      }\r\n    },\r\n    deleteMessage: (state, action) => {\r\n      state.selectedSubchannel.messages = state.selectedSubchannel?.messages.filter(\r\n        (m) => m.id !== action.payload\r\n      );\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // .addCase(createHubConnection.pending, (state, action) => {\r\n      //   state.hub = null;\r\n      // })\r\n      // .addCase(createHubConnection.fulfilled, (state, action) => {\r\n      //   state.hub = action.payload;\r\n      // })\r\n      .addCase(fetchChannels.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchChannels.fulfilled, (state, action) => {\r\n        state.channels = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchChannels.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchChannelDetails.pending, (state, action) => {\r\n        state.selectedChannel = null;\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchChannelDetails.fulfilled, (state, action) => {\r\n        state.selectedChannel = action.payload;\r\n        state.prevSelectedSubchannel = state.selectedSubchannel;\r\n        state.selectedSubchannel = null;\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchChannelDetails.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchChannelUsers.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.selectedChannelUsers = null;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchChannelUsers.fulfilled, (state, action) => {\r\n        state.selectedChannelUsers = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchChannelUsers.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(createChannel.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(createChannel.fulfilled, (state, action) => {\r\n        state.channels = [...state.channels, action.payload];\r\n        state.loading = false;\r\n      })\r\n      .addCase(createChannel.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(joinChannel.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(joinChannel.fulfilled, (state, action) => {\r\n        state.channels = [...state.channels, action.payload];\r\n        state.loading = false;\r\n      })\r\n      .addCase(joinChannel.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(createSubchannel.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(createSubchannel.fulfilled, (state, action) => {\r\n        state.selectedChannel.subchannels = [\r\n          ...state.selectedChannel.subchannels,\r\n          action.payload,\r\n        ];\r\n        state.loading = false;\r\n      })\r\n      .addCase(createSubchannel.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(leaveChannel.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(leaveChannel.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.channels = state.channels.filter((c) => c.id !== action.payload);\r\n        state.selectedSubchannel = null;\r\n        state.selectedChannelUsers = null;\r\n        state.selectedChannel = null;\r\n      })\r\n      .addCase(leaveChannel.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(deleteChannel.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(deleteChannel.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.channels = state.channels.filter((c) => c.id !== action.payload);\r\n        state.selectedSubchannel = null;\r\n        state.selectedChannelUsers = null;\r\n        state.selectedChannel = null;\r\n      })\r\n      .addCase(deleteChannel.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(changePasswordChannel.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(changePasswordChannel.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(changePasswordChannel.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(kickUserChannel.pending, (state, action) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(kickUserChannel.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.selectedChannelUsers = state.selectedChannelUsers.filter(\r\n          (uc) => uc.id !== action.payload\r\n        );\r\n      })\r\n      .addCase(kickUserChannel.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  resetChannelErrors,\r\n  subchannelDetails,\r\n  resetChannelSlice,\r\n  addMessage,\r\n  deleteMessage,\r\n} = channelSlice.actions;\r\n\r\nexport const selectChannelState = (state) => state.channel;\r\n\r\nexport default channelSlice.reducer;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n  animation: ${rotate360} 1s linear infinite;\r\n  transform: translateZ(0);\r\n  border-top: 2px solid white;\r\n  border-right: 2px solid white;\r\n  border-bottom: 2px solid white;\r\n  border-left: 4px solid grey;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n`;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Spinner } from \"./Spinner\";\r\n\r\nconst baseStyle = css`\r\n  width: ${(props) => props.fluid && \"100%\"};\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  height: 48px;\r\n  color: white;\r\n  background-color: ${props => props.danger ? \"#f04747\" : \"#7187dd\"};\r\n  background-color: ${props => props.transparent && \"transparent\"};\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 5px;\r\n  margin-top: 20px;\r\n  padding: 5px 30px;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${baseStyle};\r\n`;\r\n\r\nconst SpinnerWrapper = styled.div`\r\n  ${baseStyle};\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return props.loading ? (\r\n    <SpinnerWrapper>\r\n      <Spinner />\r\n    </SpinnerWrapper>\r\n  ) : (\r\n    <StyledButton {...props}>{props.children}</StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 30px 20px;\r\n  border-radius: 4px;\r\n  width: 500px;\r\n  background: rgb(54, 57, 63);\r\n  > h1 {\r\n    font-size: 1.5rem;\r\n    align-self: center;\r\n  }\r\n  > h2 {\r\n    color: ${(props) =>\r\n      props.selected ? \"#aeb2b9\" : \"#72767d\"};\r\n    font-size: 1rem;\r\n    align-self: center;\r\n    &::after {\r\n      content: \"\";\r\n      display: ${(props) => (props.selected ? \"block\" : \"none\")};\r\n      height: 3px;\r\n      background-color: white;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Message = styled.h5`\r\n    margin-top: 4px;\r\n    color: rgb(200, 20, 20);\r\n    font-size: 0.7rem;\r\n`;\r\n\r\nconst Error = (props) => {\r\n    return (\r\n        <Message>\r\n            {props.children}\r\n        </Message>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from \"../common/Button\";\r\nimport { FormWrapper } from \"../common/FormWrapper\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createChannel,\r\n  joinChannel,\r\n  selectChannelState,\r\n} from \"../stores/channelSlice\";\r\nimport Error from \"../common/Error\";\r\nimport { closeModal } from \"../stores/modalSlice\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst CreateOptionWrapper = styled.div`\r\n  display: flex;\r\n  cursor: pointer;\r\n  flex-direction: row;\r\n  align-items: baseline;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Option = styled.h2`\r\n  color: ${(props) => (props.selected ? \"#aeb2b9\" : \"#72767d\")};\r\n  font-size: 1rem;\r\n  padding-bottom: 2px;\r\n  padding: 0 3px;\r\n  border-bottom: ${(props) => (props.selected ? \"2px solid white\" : \"none\")};\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst NewChannelForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [currentOption, setCurrentOption] = useState(\"new\");\r\n  const { loading, error } = useSelector(selectChannelState);\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n  const onSubmit = (values) => {\r\n    if (currentOption === \"new\") {\r\n      const channel = {\r\n        ...values,\r\n        id: uuidv4(),\r\n      };\r\n      dispatch(createChannel(channel)).then(r => {\r\n        if (!r.error) {\r\n          dispatch(closeModal())\r\n          toast.dark(\"Channel created\")\r\n        }\r\n      });\r\n    } else {\r\n      dispatch(joinChannel(values)).then(r => {\r\n        if (!r.error) {\r\n          dispatch(closeModal())\r\n          toast.dark(\"Channel joined\")\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <CreateOptionWrapper>\r\n        <Option\r\n          selected={currentOption === \"new\"}\r\n          onClick={() => setCurrentOption(\"new\")}\r\n        >\r\n          New channel\r\n        </Option>\r\n        <Option\r\n          selected={currentOption === \"join\"}\r\n          onClick={() => setCurrentOption(\"join\")}\r\n        >\r\n          Join channel\r\n        </Option>\r\n      </CreateOptionWrapper>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Name</label>\r\n        <input name=\"name\" ref={register} />\r\n        <label>Password</label>\r\n        <input type=\"password\" name=\"password\" ref={register} />\r\n        {currentOption === \"new\" && (\r\n          <>\r\n            <label>Confirm password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              ref={register({\r\n                validate: (value) => value === watch(\"password\"),\r\n              })}\r\n            />\r\n          </>\r\n        )}\r\n        {error && <Error>{error}</Error>}\r\n\r\n        {errors.confirmPassword && <Error>Passwords do not match</Error>}\r\n        <Button fluid loading={loading ? 1 : 0} type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default NewChannelForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  fetchChannelDetails,\r\n  fetchChannels,\r\n  fetchChannelUsers,\r\n  fetchSubchannelDetails,\r\n  resetChannelErrors,\r\n  selectChannelState,\r\n} from \"../stores/channelSlice\";\r\n\r\nimport { openModal } from \"../stores/modalSlice\";\r\nimport NewChannelForm from \"./NewChannelForm\";\r\n\r\n\r\nconst ChannelsWrapper = styled.div`\r\npadding: 15px 0px;\r\n  width: 70px;\r\n  display: flex;\r\n  background-color: #202225;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n`;\r\n\r\nconst ChannelCircledButton = styled.div`\r\n  position: relative;\r\n  font-size: 1rem;\r\n  display: grid;\r\n  place-items: center;\r\n  cursor: pointer;\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-bottom: 8px;\r\n  border-radius: ${(props) => (props.selected ? \"35%\" : \"100%\")};\r\n  background-color: ${(props) => (props.selected ? \"#7187dd\" : \" #36393f\")};\r\n  &:hover {\r\n    border-radius: 35%;\r\n  }\r\n  > img {\r\n    height: 20px;\r\n    object-fit: contain;\r\n  }\r\n  &::before {\r\n    width: 10px;\r\n    height: 30px;\r\n    position: absolute;\r\n    left: -15px;\r\n    top: calc(50% - 15px);\r\n    background-color: #ffffff;\r\n    border-radius: 35%;\r\n    content: \"\";\r\n    display: ${(props) => (props.selected ? \"inline\" : \"none\")};\r\n  }\r\n`;\r\n\r\nconst ChannelList = () => {\r\n  const dispatch = useDispatch();\r\n  const { channels, selectedChannel } = useSelector(selectChannelState);\r\n  useEffect(() => {\r\n    dispatch(fetchChannels())\r\n    .then((r) => dispatch(fetchChannelDetails(r.payload[0]?.id))\r\n    )\r\n  }\r\n , []);\r\n\r\n  useEffect(() => {\r\n    if (selectedChannel) {\r\n      if (selectedChannel.subchannels?.length > 0) {\r\n        dispatch(fetchSubchannelDetails(selectedChannel?.subchannels[0]?.id));\r\n      }\r\n      dispatch(fetchChannelUsers(selectedChannel?.id));\r\n    }\r\n  }, [selectedChannel]);\r\n\r\n\r\n  const handleNewChannel = () => {\r\n    dispatch(resetChannelErrors());\r\n    dispatch(openModal(<NewChannelForm />));\r\n  };\r\n\r\n  return (\r\n    <ChannelsWrapper>\r\n      {channels?.map((c) => (\r\n        <ChannelCircledButton\r\n          hasNotifications={true}\r\n          selected={selectedChannel?.id === c.id}\r\n          key={c.id}\r\n          onClick={() => {\r\n            dispatch(fetchChannelDetails(c.id));\r\n          }}\r\n        >\r\n          {c.name[0]}\r\n        </ChannelCircledButton>\r\n      ))}\r\n      <ChannelCircledButton onClick={handleNewChannel}>\r\n        <img src=\"./assets/icons/plus.svg\" alt=\"plus\" />\r\n      </ChannelCircledButton>\r\n    </ChannelsWrapper>\r\n  );\r\n};\r\n\r\nexport default ChannelList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  background-color: ${(props) => props.color};\r\n  width: 100%;\r\n  height: 1px;\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Separator = (props) => {\r\n  return <Wrapper {...props} />;\r\n};\r\n\r\nexport default Separator;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  border-radius: 100%;\r\n  padding: 5px;\r\n  height: ${(props) => (props.big ? \"70px\" : \"40px\")};\r\n  width: ${(props) => (props.big ? \"70px\" : \"40px\")};\r\n  background: ${(props) => (props.background ? props.background : \"#747f8d\")};\r\n  > img {\r\n    height: ${(props) => (props.big ? \"40px\" : \"20px\")};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nconst DefaultAvatar = (props) => {\r\n  return (\r\n    <Container {...props}>\r\n      <img alt=\"default\" src=\"./assets/icons/discord-icon.png\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DefaultAvatar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DefaultAvatar from \"./DefaultAvatar\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  cursor: pointer;\r\n  border-radius: 100%;\r\n  width: 80px;\r\n  display: grid;\r\n  place-items: center;\r\n  height: 80px;\r\n  background-color: #747f8d;\r\n  img {\r\n    position: relative;\r\n    width: 100%;\r\n    object-fit: fill;\r\n  }\r\n`;\r\n\r\nconst EditWrapper = styled.div`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 100%;\r\n    background-color: rgb(220, 221, 222);\r\n    img {\r\n        width: 15px;\r\n        object-fit: scale-down;\r\n    }\r\n`\r\n\r\nconst EditAvatar = () => {\r\n  return (\r\n    <Wrapper>\r\n        <DefaultAvatar big/>\r\n        <EditWrapper>\r\n            <img alt=\"edit\" src=\"./assets/icons/edit.svg\"/>\r\n        </EditWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default EditAvatar;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport Button from \"../common/Button\";\r\nimport { FormWrapper } from \"../common/FormWrapper\";\r\nimport { closeModal } from \"../stores/modalSlice\";\r\nimport { selectUserState, updateAccount } from \"../stores/userSlice\";\r\nimport Error from \"../common/Error\";\r\n\r\nconst ChangeEmailForm = () => {\r\n  const { user, loading, error } = useSelector(selectUserState);\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit } = useForm({ defaultValues: user });\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(updateAccount(values)).then((r) => {\r\n      if (!r.error) {\r\n        dispatch(closeModal());\r\n        toast.dark(\"Email changed\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Email</label>\r\n        <input name=\"email\" ref={register} />\r\n        {error && <Error>{error}</Error>}\r\n        <Error />\r\n        <Button fluid loading={loading ? 1 : 0} type=\"submit\">\r\n          Change\r\n        </Button>\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default ChangeEmailForm;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport Button from \"../common/Button\";\r\nimport { FormWrapper } from \"../common/FormWrapper\";\r\nimport { closeModal } from \"../stores/modalSlice\";\r\nimport { selectUserState, updatePassword } from \"../stores/userSlice\";\r\nimport Error from \"../common/Error\";\r\n\r\nconst ChangePasswordForm = () => {\r\n  const { loading, error } = useSelector(selectUserState);\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (values) => {\r\n    dispatch(updatePassword(values)).then((r) => {\r\n      if (!r.error) {\r\n        dispatch(closeModal());\r\n        toast.dark(\"Password changed\");\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <FormWrapper>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Current password</label>\r\n        <input type=\"password\" name=\"currentPassword\" ref={register} />\r\n        <label>New password</label>\r\n        <input type=\"password\" name=\"newPassword\" ref={register} />\r\n        <label>Confirm new password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          ref={register({\r\n            validate: (value) => value === watch(\"newPassword\"),\r\n          })}\r\n        />\r\n        {error && <Error>{error}</Error>}\r\n        {errors.confirmPassword && <Error>Passwords do not match</Error>}\r\n        <Button fluid loading={loading ? 1 : 0} type=\"submit\">\r\n          Change\r\n        </Button>\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordForm;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { logout, selectUserState } from \"../stores/userSlice\";\r\nimport Button from \"../common/Button\";\r\nimport Separator from \"../common/Separator\";\r\nimport EditAvatar from \"../components/EditAvatar\";\r\nimport ChangeEmailForm from \"../components/ChangeEmailForm\";\r\nimport { openModal } from \"../stores/modalSlice\";\r\nimport ChangePasswordForm from \"../components/ChangePasswordForm\";\r\n\r\nconst Container = styled.div`\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 10;\r\n  background-color: rgb(47, 49, 54);\r\n  position: absolute;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 60px;\r\n  width: 650px;\r\n`;\r\n\r\nconst SectionHeader = styled.h1`\r\n  color: white;\r\n  font-size: 1.5rem;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst EditFieldWrapper = styled.div`\r\n  padding: 10px 0px;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst OptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  h3 {\r\n    color: #878b90;\r\n    font-size: 0.7rem;\r\n    text-transform: uppercase;\r\n  }\r\n  p {\r\n    color: white;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst EditButton = styled(Button)`\r\n  margin: 0;\r\n  padding: 0px 30px;\r\n  color: white;\r\n  background-color: rgb(116, 127, 141);\r\n`;\r\n\r\nconst CloseButton = styled.img`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 35px;\r\n  width: 40px;\r\n  height: 40px;\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  object-fit: contain;\r\n  border: 1px solid white;\r\n`;\r\n\r\nconst AvatarNameWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 10px;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  h2 {\r\n    font-size: 1.4rem;\r\n  }\r\n  small {\r\n    font-size: 1.2rem;\r\n    color: #878b90;\r\n  }\r\n`;\r\n\r\nconst Settings = ({ closeCallback }) => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(selectUserState);\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <CloseButton src=\"./assets/icons/close.svg\" onClick={closeCallback} />\r\n        <SectionHeader>My account</SectionHeader>\r\n        <EditFieldWrapper>\r\n          <AvatarNameWrapper>\r\n            <EditAvatar />\r\n            <h2>\r\n              {user?.username}\r\n              <small>#{user?.id.slice(-4)}</small>\r\n            </h2>\r\n          </AvatarNameWrapper>\r\n          <EditButton>Edit</EditButton>\r\n        </EditFieldWrapper>\r\n        <Separator color=\"#42454a\" />\r\n        <EditFieldWrapper>\r\n          <OptionWrapper>\r\n            <h3>Email</h3>\r\n            <p>{user?.email}</p>\r\n          </OptionWrapper>\r\n          <EditButton onClick={() => dispatch(openModal(<ChangeEmailForm />))}>\r\n            Edit\r\n          </EditButton>\r\n        </EditFieldWrapper>\r\n        <Separator color=\"#42454a\" />\r\n        <EditFieldWrapper>\r\n          <OptionWrapper>\r\n            <h3>Password</h3>\r\n            <p>*****</p>\r\n          </OptionWrapper>\r\n          <EditButton onClick={() => dispatch(openModal(<ChangePasswordForm />))}>\r\n            Edit\r\n          </EditButton>\r\n        </EditFieldWrapper>\r\n        <Separator color=\"#42454a\" />\r\n        <Button danger onClick={() => {\r\n          dispatch(logout())\r\n          }}>\r\n          Logout\r\n        </Button>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Settings from \"../layouts/Settings\";\r\nimport { selectUserState } from \"../stores/userSlice\";\r\nimport DefaultAvatar from \"./DefaultAvatar\";\r\n\r\nconst Container = styled.div`\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background: rgb(41, 43, 47);\r\n  img {\r\n  }\r\n`;\r\n\r\nconst UsernameContainer = styled.div`\r\n  display: flex;\r\n  margin-left: 6px;\r\n  flex-direction: column;\r\n  > h1 {\r\n    font-size: 0.8rem;\r\n    color: white;\r\n  }\r\n  > p {\r\n    font-size: 0.7rem;\r\n    color: rgb(176, 178, 181);\r\n  }\r\n`;\r\n\r\nconst IconsWrapper = styled.div`\r\n  margin-left: auto;\r\n`;\r\n\r\nconst MenuIcon = styled.img`\r\n  height: 25px;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UserInfo = () => {\r\n  const { user } = useSelector(selectUserState);\r\n  const [settingsOpened, setSettingsOpened] = useState(false);\r\n  if (settingsOpened) {\r\n    return <Settings closeCallback={() => setSettingsOpened(false)} />;\r\n  }\r\n  return (\r\n    <Container>\r\n      <DefaultAvatar/>\r\n      <UsernameContainer>\r\n        <h1>{user.username}</h1>\r\n        <p>#{user.id.slice(-4)}</p>\r\n      </UsernameContainer>\r\n      <IconsWrapper>\r\n        <MenuIcon\r\n          src=\"./assets/icons/settings.svg\"\r\n          onClick={() => setSettingsOpened(true)}\r\n        />\r\n      </IconsWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport { FormWrapper } from \"../common/FormWrapper\";\r\nimport Button from \"../common/Button\";\r\nimport { createSubchannel, selectChannelState } from \"../stores/channelSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Error from \"../common/Error\";\r\nimport { toast } from \"react-toastify\";\r\nimport { closeModal } from \"../stores/modalSlice\";\r\n\r\nconst NewSubchannelForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, selectedChannel } = useSelector(selectChannelState);\r\n  const { register, handleSubmit } = useForm();\r\n  const onSubmit = (values) => {\r\n    const subchannel = {\r\n      ...values,\r\n      id: uuidv4(),\r\n    };\r\n    dispatch(createSubchannel({ id: selectedChannel?.id, subchannel })).then(\r\n      (r) => {\r\n        if (!r.error) {\r\n          dispatch(closeModal());\r\n          toast.dark(\"Subchannel created\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <h2>Create subchannel</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Name</label>\r\n        <input name=\"name\" ref={register} />\r\n        {error && <Error>{error}</Error>}\r\n        <Button fluid type=\"submit\" loading={loading ? 1 : 0}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default NewSubchannelForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\nimport { FormWrapper } from \"./FormWrapper\";\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: grid;\r\n  column-gap: 20px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n`;\r\n\r\nconst ConfirmForm = ({header, content, confirmCallback, declineCallback }) => {\r\n  return (\r\n    <FormWrapper>\r\n      <h1>{header}</h1>\r\n      <h2>{content}</h2>\r\n      <ButtonWrapper>\r\n        <Button\r\n          danger\r\n          onClick={() => confirmCallback()}\r\n        >\r\n          Yes\r\n        </Button>\r\n        <Button onClick={() => declineCallback()}>No</Button>\r\n      </ButtonWrapper>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default ConfirmForm;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport Button from \"../common/Button\";\r\nimport Error from \"../common/Error\";\r\nimport { FormWrapper } from \"../common/FormWrapper\";\r\nimport {\r\n  changePasswordChannel,\r\n  selectChannelState,\r\n} from \"../stores/channelSlice\";\r\nimport { closeModal } from \"../stores/modalSlice\";\r\n\r\nconst ChangeChannelPasswordForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, selectedChannel } = useSelector(selectChannelState);\r\n\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const onSubmit = (values) => {\r\n    dispatch(changePasswordChannel({ id: selectedChannel?.id, values })).then(\r\n      (r) => {\r\n        if (!r.error) {\r\n          dispatch(closeModal());\r\n          toast.dark(\"Channel password updated\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <FormWrapper>\r\n      <h2>Change channel password</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Current password</label>\r\n        <input type=\"password\" name=\"currentPassword\" ref={register} />\r\n        <label>New password</label>\r\n        <input type=\"password\" name=\"newPassword\" ref={register} />\r\n        <label>Confirm new password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmNewPassword\"\r\n          ref={register({\r\n            validate: (value) => value === watch(\"newPassword\"),\r\n          })}\r\n        />\r\n        {error && <Error>{error}</Error>}\r\n\r\n        {errors.confirmPassword && <Error>Passwords do not match</Error>}\r\n\r\n        <Button fluid type=\"submit\" loading={loading ? 1 : 0}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default ChangeChannelPasswordForm;\r\n","import React, { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport ConfirmForm from \"../common/ConfirmForm\";\r\nimport { useOnClickOutside } from \"../hooks/useOnClickOutside\";\r\nimport {\r\n  leaveChannel,\r\n  selectChannelState,\r\n  resetChannelErrors,\r\n  deleteChannel,\r\n} from \"../stores/channelSlice\";\r\nimport { closeModal, openModal } from \"../stores/modalSlice\";\r\nimport { selectUserState } from \"../stores/userSlice\";\r\nimport ChangeChannelPasswordForm from \"./ChangeChannelPasswordForm\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 65px;\r\n  background-color: #18191c;\r\n  z-index: 5;\r\n  padding: 10px;\r\n  width: calc(100% - 30px);\r\n  display: flex;\r\n  border-radius: 5px;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Option = styled.div`\r\n  font-size: 0.8rem;\r\n  padding: 8px;\r\n  color: #aaaaaa;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    background-color: #5c6fb1;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst ChannelMenu = ({ closeCallback, trigger }) => {\r\n  const { selectedChannel } = useSelector(selectChannelState);\r\n  const { user } = useSelector(selectUserState);\r\n  const dispatch = useDispatch();\r\n  const ref = useRef();\r\n  useOnClickOutside(ref, true, () => closeCallback(), trigger);\r\n\r\n  const handleLeaveChannel = () => {\r\n    closeCallback();\r\n    dispatch(\r\n      openModal(\r\n        <ConfirmForm\r\n          header={`Leaving \"${selectedChannel?.name}\"`}\r\n          content=\"Do you really want to leave this channel?\"\r\n          confirmCallback={() =>\r\n            dispatch(leaveChannel(selectedChannel?.id)).then((r) => {\r\n              if (!r.error) {\r\n                dispatch(closeModal());\r\n                toast.dark(\"You left the channel\");\r\n              }\r\n            })\r\n          }\r\n          declineCallback={() => dispatch(closeModal())}\r\n        />\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDeleteChannel = () => {\r\n    closeCallback();\r\n    dispatch(\r\n      openModal(\r\n        <ConfirmForm\r\n          header={`Deleting \"${selectedChannel?.name}\"`}\r\n          content=\"Do you really want to delete this channel?\"\r\n          confirmCallback={() =>\r\n            dispatch(deleteChannel(selectedChannel?.id)).then((r) => {\r\n              if (!r.error) {\r\n                dispatch(closeModal());\r\n                toast.dark(\"You deleted the channel\");\r\n              }\r\n            })\r\n          }\r\n          declineCallback={() => dispatch(closeModal())}\r\n        />\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    closeCallback();\r\n    dispatch(resetChannelErrors())\r\n    dispatch(\r\n      openModal(\r\n       <ChangeChannelPasswordForm/>\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper ref={ref}>\r\n      {user.id === selectedChannel?.creatorId && (\r\n        <>\r\n          <Option onClick={handleChangePassword}>Change password</Option>\r\n          <Option onClick={handleDeleteChannel}>Delete channel</Option>\r\n        </>\r\n      )}\r\n      <Option onClick={handleLeaveChannel}>Leave channel</Option>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ChannelMenu;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  fetchSubchannelDetails,\r\n  joinSubchannelGroup,\r\n  leaveSubchannelGroup,\r\n  resetChannelErrors,\r\n  selectChannelState,\r\n} from \"../stores/channelSlice\";\r\nimport { openModal } from \"../stores/modalSlice\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport NewSubchannelForm from \"./NewSubchannelForm\";\r\nimport ChannelMenu from \"./ChannelMenu\";\r\nimport { selectUserState } from \"../stores/userSlice\";\r\n\r\nconst Containter = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 250px;\r\n  background-color: rgb(47, 49, 54);\r\n`;\r\n\r\nconst ChannelNameWrapper = styled.div`\r\n  display: flex;\r\n  height: 50px;\r\n  position: relative;\r\n  flex-direction: row;\r\n  cursor: pointer;\r\n  padding: 0px 15px;\r\n  border-bottom: 1px solid rgb(35, 37, 39);\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  &:hover {\r\n    background-color: #34373c;\r\n  }\r\n  > img {\r\n    height: 15px;\r\n    object-fit: contain;\r\n  }\r\n  > h3 {\r\n    font-size: 0.9rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst SubchannelsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  overflow-y: scroll;\r\n  position: relative;\r\n  margin: 10px 0;\r\n  margin-right: 4px;\r\n\r\n  padding: 0 7px;\r\n`;\r\n\r\nconst SubheaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 5px 0px;\r\n  cursor: pointer;\r\n  > h1 {\r\n    margin-left: 5px;\r\n    text-transform: uppercase;\r\n    font-size: 0.7rem;\r\n    color: rgb(114, 118, 125);\r\n  }\r\n`;\r\n\r\nconst SubchannelWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  background-color: ${(props) => props.selected && \"#34373c\"};\r\n  padding: 5px 15px;\r\n  margin-top: 4px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #34373c;\r\n  }\r\n  > img {\r\n    height: 12px;\r\n  }\r\n  > h1 {\r\n    margin-left: 7px;\r\n    font-size: 0.85rem;\r\n    color: ${(props) => (props.selected ? \"#ccd0d9\" : \"#72767d\")};\r\n  }\r\n`;\r\n\r\nconst ArrowButton = styled.img`\r\n  height: 8px;\r\n  object-fit: contain;\r\n  margin-left: -2px;\r\n`;\r\n\r\nconst NewSubchannelButton = styled.img`\r\n  height: 18px;\r\n  object-fit: contain;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst SubchannelList = () => {\r\n  const { selectedChannel, selectedSubchannel } = useSelector(\r\n    selectChannelState\r\n  );\r\n  const { user } = useSelector(selectUserState);\r\n  const [menuOpened, setMenuOpened] = useState(false);\r\n  const ref = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNewSubchannel = () => {\r\n    if (user?.id === selectedChannel?.creatorId) {\r\n      dispatch(resetChannelErrors());\r\n      dispatch(openModal(<NewSubchannelForm />));\r\n    }\r\n  };\r\n\r\n  const handleSubchannelClick = (id) => {\r\n    dispatch(fetchSubchannelDetails(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(joinSubchannelGroup());\r\n    return () => dispatch(leaveSubchannelGroup());\r\n  }, [selectedSubchannel?.id]);\r\n\r\n  return (\r\n    <Containter>\r\n      {selectedChannel && (\r\n        <ChannelNameWrapper\r\n          onClick={() => setMenuOpened(!menuOpened)}\r\n          ref={ref}\r\n        >\r\n          <h3>{selectedChannel.name}</h3>\r\n          <img\r\n            src={`./assets/icons/${menuOpened ? \"close\" : \"down-arrow\"}.svg`}\r\n            alt=\"menu\"\r\n          />\r\n          {menuOpened && (\r\n            <ChannelMenu\r\n              closeCallback={() => setMenuOpened(false)}\r\n              trigger={ref}\r\n            />\r\n          )}\r\n        </ChannelNameWrapper>\r\n      )}\r\n\r\n      <SubchannelsWrapper>\r\n        {selectedChannel && (\r\n          <SubheaderWrapper>\r\n            <ArrowButton alt=\"arrow\" src=\"./assets/icons/down-arrow-gray.svg\" />\r\n            <h1>Text subchannels</h1>\r\n            <NewSubchannelButton\r\n              alt=\"subchannelButton\"\r\n              src=\"./assets/icons/gray-plus.svg\"\r\n              onClick={handleNewSubchannel}\r\n            />\r\n          </SubheaderWrapper>\r\n        )}\r\n        {selectedChannel?.subchannels?.map((sc) => (\r\n          <SubchannelWrapper\r\n            key={sc.id}\r\n            selected={selectedSubchannel?.id === sc.id}\r\n            onClick={() => handleSubchannelClick(sc.id)}\r\n          >\r\n            <img alt=\"hash\" src=\"./assets/icons/hash-tag.svg\" />\r\n            <h1>{sc.name}</h1>\r\n          </SubchannelWrapper>\r\n        ))}\r\n      </SubchannelsWrapper>\r\n      <UserInfo />\r\n    </Containter>\r\n  );\r\n};\r\n\r\nexport default SubchannelList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { deleteMsgFromSubchannel, selectChannelState } from \"../stores/channelSlice\";\r\nimport { selectUserState } from \"../stores/userSlice\";\r\nimport DefaultAvatar from \"./DefaultAvatar\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  margin-right: 4px;\r\n  padding: 4px 15px;\r\n  margin-bottom: 8px;\r\n  color: white;\r\n  &:hover {\r\n    background-color: #32353b;\r\n  }\r\n`;\r\nconst MessageWrapper = styled.div`\r\n  display: flex;\r\n  margin-left: 10px;\r\n  flex-direction: column;\r\n  > p {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst NameWrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: row;\r\n  > h1 {\r\n    font-size: 0.8rem;\r\n  }\r\n  > p {\r\n    margin-left: 5px;\r\n    color: rgb(114, 116, 121);\r\n    font-size: 0.65rem;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled.img`\r\n  margin-left: auto;\r\n  height: 20px;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UserMessage = ({ id, image, sender, date, content }) => {\r\n  const { user } = useSelector(selectUserState);\r\n  const { selectedChannel } = useSelector(selectChannelState);\r\n  const [hovered, setHovered] = useState(false);\r\n  const [binClickedOnce, setBinClickedOnce] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setBinClickedOnce(false);\r\n  }, [hovered]);\r\n\r\n  const handleBinClick = () => {\r\n    if (binClickedOnce) {\r\n      dispatch(deleteMsgFromSubchannel(id))\r\n    }\r\n    setBinClickedOnce(true);\r\n  };\r\n  return (\r\n    <Container\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n    >\r\n      <DefaultAvatar image={image} />\r\n      <MessageWrapper>\r\n        <NameWrapper>\r\n          <h1>{sender}</h1>\r\n          <p>{date}</p>\r\n        </NameWrapper>\r\n        <p>{content}</p>\r\n      </MessageWrapper>\r\n      {hovered &&\r\n        (user.username === sender ||\r\n          user?.id === selectedChannel?.creatorId) && (\r\n          <DeleteButton\r\n            onClick={handleBinClick}\r\n            alt=\"trash\"\r\n            src={`./assets/icons/${\r\n              !binClickedOnce ? \"trash\" : \"trash-red\"\r\n            }.svg`}\r\n          />\r\n        )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserMessage;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  selectChannelState,\r\n  sendMsgToSubchannel,\r\n} from \"../stores/channelSlice\";\r\nimport UserMessage from \"./UserMessage\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  padding: 15px 0;\r\n`;\r\n\r\nconst MessageList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-right: 4px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst MessageInput = styled.input`\r\n  margin: 0 10px;\r\n  height: 50px;\r\n  margin-bottom: 10px;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 0.9rem;\r\n  padding: 0 15px;\r\n  background-color: rgb(64, 68, 75);\r\n  color: white;\r\n  :placeholer {\r\n    color: rgb(109, 113, 122);\r\n  }\r\n`;\r\n\r\nconst Chat = () => {\r\n  const { selectedSubchannel } = useSelector(selectChannelState);\r\n  const [content, setContent] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const messagesEndRef = useRef();\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [selectedSubchannel?.messages]);\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      dispatch(\r\n        sendMsgToSubchannel({ id: selectedSubchannel?.id, content: content })\r\n      );\r\n      setContent(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <MessageList>\r\n        {selectedSubchannel?.messages?.map((msg) => (\r\n          <UserMessage\r\n            key={msg.id}\r\n            id={msg.id}\r\n            image=\"./assets/icons/discord-icon.png\"\r\n            sender={msg.sender}\r\n            date={format(new Date(msg.date), \"HH:mm dd-MM-yyyy\")}\r\n            content={msg.content}\r\n          />\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </MessageList>\r\n      <MessageInput\r\n        placeholder={`Type to #${selectedSubchannel?.name || \"\"}`}\r\n        value={content}\r\n        disabled={selectedSubchannel === null}\r\n        onChange={(e) => setContent(e.currentTarget.value)}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport ConfirmForm from \"../common/ConfirmForm\";\r\nimport { useOnClickOutside } from \"../hooks/useOnClickOutside\";\r\nimport { kickUserChannel, selectChannelState } from \"../stores/channelSlice\";\r\nimport { closeModal, openModal } from \"../stores/modalSlice\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 25px;\r\n  left: 10px;\r\n  background-color: #18191c;\r\n  z-index: 5;\r\n  padding: 10px;\r\n  width: calc(100% - 10px);\r\n  display: flex;\r\n  border-radius: 5px;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Option = styled.div`\r\n  font-size: 0.8rem;\r\n  padding: 8px;\r\n  color: #aaaaaa;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    background-color: #5c6fb1;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst MemberMenu = ({ id, name, trigger, closeCallback }) => {\r\n  const ref = useRef();\r\n  const { selectedChannel } = useSelector(selectChannelState);\r\n  useOnClickOutside(ref, true, () => closeCallback(), trigger);\r\n  const dispatch = useDispatch();\r\n  const handleUserKick = () => {\r\n    dispatch(\r\n      openModal(\r\n        <ConfirmForm\r\n          header={`Kicking \"${name}\"`}\r\n          content={`Do you really want to kick this user?`}\r\n          declineCallback={() => dispatch(closeModal())}\r\n          confirmCallback={() =>\r\n            dispatch(\r\n              kickUserChannel({ cid: selectedChannel?.id, uid: id })\r\n            ).then((r) => {\r\n              if (!r.error) {\r\n                dispatch(closeModal());\r\n                toast.dark(`${name} was kicked`);\r\n              }\r\n            })\r\n          }\r\n        />\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Wrapper ref={ref}>\r\n      <Option onClick={handleUserKick}>Kick {name}</Option>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MemberMenu;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { selectUserState } from \"../stores/userSlice\";\r\nimport { selectChannelState } from \"../stores/channelSlice\";\r\nimport DefaultAvatar from \"./DefaultAvatar\";\r\nimport MemberMenu from \"./MemberMenu\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  margin-top: 8px;\r\n  > p {\r\n    margin-left: 5px;\r\n    font-size: 0.8rem;\r\n  }\r\n  > img {\r\n    object-fit: contain;\r\n    height: 16px;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nconst MemberInfo = ({ id, image, name, isHost }) => {\r\n  const [menuOpened, setMenuOpened] = useState(false);\r\n  const { user } = useSelector(selectUserState);\r\n  const { selectedChannel } = useSelector(selectChannelState);\r\n  const ref = useRef();\r\n  const onUserClick = () => {\r\n    if (user?.id === selectedChannel?.creatorId && user?.id !== id) {\r\n      setMenuOpened(!menuOpened);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper ref={ref} onClick={onUserClick}>\r\n      <DefaultAvatar image={image} />\r\n      <p>{name}</p>\r\n      {isHost && <img alt=\"host\" src=\"./assets/icons/crown.svg\" />}\r\n      {menuOpened && (\r\n        <MemberMenu\r\n          id={id}\r\n          name={name}\r\n          trigger={ref}\r\n          closeCallback={() => setMenuOpened(false)}\r\n        />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MemberInfo;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { selectChannelState } from \"../stores/channelSlice\";\r\nimport MemberInfo from \"./MemberInfo\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: rgb(47, 49, 54);\r\n  padding: 15px;\r\n  color: rgb(142, 146, 151);\r\n  width: 250px;\r\n  > h1 {\r\n    margin-left: 5px;\r\n    text-transform: uppercase;\r\n    font-size: 0.6rem;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst MemberList = () => {\r\n  const { selectedChannelUsers, selectedChannel } = useSelector(\r\n    selectChannelState\r\n    );\r\n    \r\n    return (\r\n    <Container>\r\n      {selectedChannelUsers?.length > 0 && <h1>members</h1>}\r\n      {selectedChannelUsers?.map((m) => (\r\n        <MemberInfo\r\n          id={m.id}\r\n          key={m.id}\r\n          image=\"./assets/icons/discord-icon.png\"\r\n          name={m.username}\r\n          isHost={selectedChannel?.creatorId === m.id}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { selectChannelState } from \"../stores/channelSlice\";\r\nimport Chat from \"./Chat\";\r\nimport MemberList from \"./MemberList\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: rgb(54, 57, 63);\r\n  overflow: hidden;\r\n  flex: 1;\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  height: 50px;\r\n  flex-direction: row;\r\n  cursor: pointer;\r\n  padding: 0px 15px;\r\n  border-bottom: 1px solid rgb(35, 37, 39);\r\n  align-items: center;\r\n  > img {\r\n    height: 18px;\r\n    object-fit: contain;\r\n  }\r\n  > h3 {\r\n    margin-left: 10px;\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  overflow: hidden;\r\n  flex: 1;\r\n`;\r\n\r\nconst MessagePanel = () => {\r\n\r\n  const { selectedSubchannel } = useSelector(selectChannelState);\r\n\r\n  return (\r\n    <Container>\r\n      <HeaderContainer>\r\n        {selectedSubchannel && (\r\n          <>\r\n            <img src=\"./assets/icons/hash-tag.svg\" alt=\"hash\" />\r\n            <h3>{selectedSubchannel.name}</h3>\r\n          </>\r\n        )}\r\n      </HeaderContainer>\r\n      <MainContainer>\r\n        <Chat />\r\n        <MemberList />\r\n      </MainContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MessagePanel;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport SubchannelList from './SubchannelList'\r\nimport MessagePanel from './MessagePanel'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex: 1;\r\n    background: transparent;\r\n    border-top-left-radius: 10px;\r\n    overflow: hidden;\r\n`\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <Container>\r\n            <SubchannelList/>\r\n            <MessagePanel/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore,\r\n} from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./userSlice\";\r\nimport channelReducer, { addMessage, deleteMessage } from \"./channelSlice\";\r\nimport modalReducer from \"./modalSlice\";\r\n\r\nimport {\r\n  withCallbacks,\r\n  signalMiddleware,\r\n  HttpTransportType,\r\n  HubConnectionBuilder,\r\n} from \"redux-signalr\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const connection = new HubConnectionBuilder()\r\n  .withUrl(process.env.REACT_APP_API_CHAT_URL, {\r\n    accessTokenFactory: () => window.localStorage.getItem(\"jwt\"),\r\n    skipNegotiation: true,\r\n    transport: HttpTransportType.WebSockets,\r\n  })\r\n  .build();\r\n\r\nconst callbacks = withCallbacks()\r\n  .add(\"ReceiveMessage\", (msg) => (dispatch) => {\r\n    dispatch(addMessage(msg))\r\n  })\r\n  .add(\"ReceiveRemoveMessage\", id => dispatch => {\r\n    dispatch(deleteMessage(id))\r\n  })\r\n  .add(\"Send\", (info) => () => {\r\n    toast.info(info);\r\n  });\r\n\r\nconst signalrMiddleware = signalMiddleware({\r\n  callbacks,\r\n  connection,\r\n  shouldConnectionStartImmediately: false\r\n});\r\n\r\n\r\nexport default createStore(\r\n  combineReducers({\r\n    user: userReducer,\r\n    channel: channelReducer,\r\n    modal: modalReducer,\r\n  }),\r\n  applyMiddleware(signalrMiddleware),\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { HubConnectionState } from \"redux-signalr\";\r\nimport ChannelList from \"../components/ChannelList\";\r\nimport Dashboard from \"../components/Dashboard\";\r\nimport { connection } from \"../stores/store\";\r\n\r\nconst DiscordApp = () => {\r\n  useEffect(() => {\r\n    if (connection.state !== HubConnectionState.Connected) {\r\n      connection\r\n        .start()\r\n        .then(() => {})\r\n        .catch((err) => console.error(err.toString()));\r\n    }\r\n    return () =>\r\n      connection\r\n        .stop()\r\n        .then(() => {})\r\n        .catch((err) => console.error(err.toString()));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <ChannelList />\r\n      <Dashboard />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiscordApp;\r\n","import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { history } from \"../..\";\r\nimport Button from \"../common/Button\";\r\nimport Error from \"../common/Error\";\r\nimport { FormWrapper } from \"../common/FormWrapper\";\r\nimport { resetChannelSlice } from \"../stores/channelSlice\";\r\nimport { login, resetErrors, selectUserState } from \"../stores/userSlice\";\r\n\r\nconst LoginForm = () => {\r\n  const { register, handleSubmit } = useForm();\r\n  const dispatch = useDispatch();\r\n  const { loading, error } = useSelector(selectUserState);\r\n\r\n  useEffect(() => {\r\n    dispatch(resetErrors())\r\n  }, [])\r\n  \r\n  const onSubmit = (values) => {\r\n    dispatch(resetChannelSlice())\r\n    dispatch(login(values))\r\n  };\r\n  \r\n  return (\r\n    <FormWrapper>\r\n      <h1>Welcome back!</h1>\r\n      <h2 style={{ marginTop: \"5px\" }}>We're so excited to see you again!</h2>\r\n      <form style={{ marginTop: \"15px\" }} onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Username</label>\r\n        <input name=\"username\" ref={register} />\r\n        <label>Password</label>\r\n        <input type=\"password\" name=\"password\" ref={register} />\r\n        {error && <Error>{error}</Error>}\r\n        <Button fluid type=\"submit\" loading={loading ? 1 : 0}>\r\n          Login\r\n        </Button>\r\n        <h3 onClick={() => history.push(\"/register\")}>Register an account</h3>\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { history } from \"../..\";\r\nimport Button from \"../common/Button\";\r\nimport { FormWrapper } from \"../common/FormWrapper\";\r\nimport Error from \"../common/Error\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register as registerUser, resetErrors, selectUserState } from \"../stores/userSlice\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const { loading, error } = useSelector(selectUserState);\r\n  useEffect(() => {\r\n    dispatch(resetErrors())\r\n  }, [])\r\n  \r\n  const onSubmit = (values) => {\r\n    dispatch(registerUser(values)).then((r) => {\r\n      if (!r.error) {\r\n        history.push(\"/\");\r\n        toast.dark(\"Account created\")\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <FormWrapper>\r\n      <h1>Fill up fields to register!</h1>\r\n      <form style={{ marginTop: \"15px\" }} onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Username</label>\r\n        <input name=\"username\" ref={register} />\r\n        <label>Email</label>\r\n        <input name=\"email\" ref={register} />\r\n        <label>Password</label>\r\n        <input type=\"password\" name=\"password\" ref={register} />\r\n        <label>Confirm password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          ref={register({\r\n            validate: (value) => value === watch(\"password\"),\r\n          })}\r\n        />\r\n        {errors.confirmPassword && <Error>Passwords do not match</Error>}\r\n        {error && <Error>{error}</Error>}\r\n        <Button fluid loading={loading ? 1 : 0} type=\"submit\">\r\n          Register\r\n        </Button>\r\n        <h3 onClick={() => history.push(\"/\")}>Already have an account</h3>\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport RegisterForm from \"../components/RegisterForm\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst HomeScreen = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <Switch>\r\n        <Route path=\"/register\">\r\n          <RegisterForm/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <LoginForm/>\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"../common/Modal\";\r\nimport { fetchCurrentUser, selectLoggedIn } from \"../stores/userSlice\";\r\nimport DiscordApp from \"./DiscordApp\";\r\nimport HomeScreen from \"./HomeScreen\";\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  flex-direction: row;\r\n  overflow: hidden;\r\n  background-color: #202225;\r\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='49' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%23ffffff' fill-opacity='0.04' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\r\n`;\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(selectLoggedIn);\r\n  useEffect(() => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) {\r\n      dispatch(fetchCurrentUser()).then();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\"/>\r\n      <Modal />\r\n      <AppContainer>\r\n        {isLoggedIn ? <DiscordApp /> : <HomeScreen />}\r\n      </AppContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-size: 20px;\r\n    color: white;\r\n    font-family: 'PT Sans', sans-serif;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n  }\r\n\r\n\r\n  /* Scrollbar */\r\n  /* width */\r\n  ::-webkit-scrollbar {\r\n    width: 6px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    border-radius: 5px;\r\n    background: rgb(46, 51, 56);\r\n  }\r\n\r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: rgb(32, 34, 37);\r\n    border-radius: 5px;\r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    \r\n  }\r\n   form > label {\r\n    width: 100%;\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    font-size: 0.65rem;\r\n    color: rgb(185, 187, 190);\r\n  }\r\n   form > input {\r\n    width: 100%;\r\n    padding: 7px 10px;\r\n    color: white;\r\n    margin-top: 5px;\r\n    font-size: 1rem;\r\n    background: rgb(49, 51, 57);\r\n    border: 1px solid rgb(34, 36, 40);\r\n    border-radius: 5px;\r\n    outline: none;\r\n    &:focus {\r\n      border: 1px solid rgb(113, 135, 221);\r\n    }\r\n  }\r\n  form > h3 {\r\n    color: rgb(102, 119, 189);\r\n    font-size: 0.7rem;\r\n    margin-top: 5px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport App from \"./app/layouts/App\";\nimport { createBrowserHistory } from \"history\";\nimport { GlobalStyle } from \"./app/common/globalStyle\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/stores/store\"\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <GlobalStyle />\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}